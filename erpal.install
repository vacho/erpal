<?php
/**
 * @file
 * Install, update and uninstall functions for the erpal install profile.
 */
 
/**
 * Implements hook_update_n() to attach the task term images to 
 * task_type, priority_term and task_status vocabularies 
 * Caution: Removes all terms with the same names like the default ones given 
 * in the installation profile from the vocabularies. New added terms with 
 * different names in the vocabularies, are not touched by this update
 */
function erpal_update_7001(){
  return; //@TODO: Need to replace by erpal_taxonomy_add functions
  require_once('erpal_taxonomy.inc');
  _erpal_taxonomy_prepare_directory();
  _erpal_taxonomy_create_task_type_vocabulary();
  _erpal_taxonomy_create_priority_vocabulary();
  _erpal_taxonomy_create_task_status_vocabulary();
  
}




/**
 * Implements hook_install().
 *
 * Performs actions to set up the site for this profile.
 *
 * @see system_install()
 */
function erpal_install() { 
  // Set time limit to unlimited
  drupal_set_time_limit(0);
  // adaptivetheme und theme erpal anschalten und auf default setzen
  $default_theme = 'erpal';
  $admin_theme = 'adaptivetheme_admin';
  $maintenance_theme = 'erpal_maintenance';
  // alle themes deaktivieren
  db_update('system')
    ->fields(array('status' => 0))
    ->condition('type', 'theme')
    ->execute();
  // $default_theme aktivieren
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $default_theme)
    ->execute();
  // $admin_theme aktivieren
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $admin_theme)
    ->execute();
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', $maintenance_theme)
    ->execute();
  // $admin_theme als admin theme setzen
  variable_set('admin_theme', $admin_theme);
  // $default_theme als default
  variable_set('theme_default', $default_theme);
  
  variable_set('erpal_basic_helper_display_warnings', FALSE);
  
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ), 
  );
  
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);
     
}



